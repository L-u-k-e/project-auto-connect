worker_processes 1;

events {
    worker_connections 1024;
}

http {
    server {
      listen 80 default_server;
      listen [::]:80 default_server;

      return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;


        # SSL key and cert managed via docker secrets
        ssl_certificate /run/secrets/tls-cert;
        ssl_certificate_key /run/secrets/tls-key;
        ssl_dhparam /run/secrets/tls-dhparam;


        # Recommended SSL settings from https://cipherli.st/
        # Some customizations:
        #   We dont use HSTS. We dont need it because we dont listen on 80 at all
        #   We have a custom path to our dhparam.pem file (its managed via docker secrets -- see above)
        #   resolver configuration is commented out as we're not using DNS
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_ecdh_curve secp384r1;
        ssl_session_timeout  10m;
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;
        ssl_stapling on;
        ssl_stapling_verify on;
        # resolver $DNS-IP-1 $DNS-IP-2 valid=300s;
        # resolver_timeout 5s;
        # add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;


        # gzip large text assets
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml application/javascript;





        location / {
            # proxy all requests/ responses to/from the node app
            proxy_http_version 1.1;
            proxy_pass http://app-core;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;

            # these headers are necessary to proxy websocket traffic
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}
